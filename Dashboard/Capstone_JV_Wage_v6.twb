<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.1018.0949                               -->
<workbook source-build='2021.3.3 (20213.21.1018.0949)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelRelationshipPerfOptions.true...ObjectModelRelationshipPerfOptions />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='vacancies (Vacancies)' inline='true' name='federated.1gmioib0088thf1bsq5b71apq648' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='group3db.cueberfdee85.us-east-2.rds.amazonaws.com' name='postgres.1yg2bhp1qawoxl1887bx70g7vyd3'>
            <connection authentication='username-password' class='postgres' dbname='Vacancies' odbc-native-protocol='' one-time-sql='' port='5432' server='group3db.cueberfdee85.us-east-2.rds.amazonaws.com' username='postgres' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='MLPmodel_output' table='[public].[MLPmodel_output]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='REF_DATE' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='vacancies' table='[public].[vacancies]' type='table' />
          <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='MLPmodel_output' table='[public].[MLPmodel_output]' type='table'>
            <columns>
              <column datatype='date' date-parse-format='yyyy-MM-dd' name='REF_DATE' />
            </columns>
          </relation>
          <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='TSmodel_output_Canada' table='[public].[TSmodel_output_Canada]' type='table'>
            <columns>
              <column datatype='date' date-parse-format='yyyy-MM-dd' name='ref_date' />
            </columns>
          </relation>
          <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='averagewage' table='[public].[averagewage]' type='table' />
          <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='canada_vacancies' table='[public].[canada_vacancies]' type='table' />
          <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='machinelearning' table='[public].[machinelearning]' type='table' />
          <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='noc' table='[public].[noc]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[GEO (MLPmodel_output)]' value='[MLPmodel_output].[GEO]' />
          <map key='[JOB_CHAR (MLPmodel_output)]' value='[MLPmodel_output].[JOB_CHAR]' />
          <map key='[NOC (MLPmodel_output)]' value='[MLPmodel_output].[NOC]' />
          <map key='[PREDICTED_VACANCIES (MLPmodel_output)]' value='[MLPmodel_output].[PREDICTED_VACANCIES]' />
          <map key='[REF_DATE (MLPmodel_output)]' value='[MLPmodel_output].[REF_DATE]' />
          <map key='[avg_wage]' value='[averagewage].[avg_wage]' />
          <map key='[geo]' value='[machinelearning].[geo]' />
          <map key='[id]' value='[machinelearning].[id]' />
          <map key='[index]' value='[MLPmodel_output].[index]' />
          <map key='[job_char (machinelearning)]' value='[machinelearning].[job_char]' />
          <map key='[job_char]' value='[averagewage].[job_char]' />
          <map key='[job_details]' value='[vacancies].[job_details]' />
          <map key='[location (averagewage)]' value='[averagewage].[location]' />
          <map key='[location]' value='[vacancies].[location]' />
          <map key='[noc_code (averagewage)]' value='[averagewage].[noc_code]' />
          <map key='[noc_code (machinelearning)]' value='[machinelearning].[noc_code]' />
          <map key='[noc_code (noc)]' value='[noc].[noc_code]' />
          <map key='[noc_code]' value='[vacancies].[noc_code]' />
          <map key='[noc_desc (machinelearning)]' value='[machinelearning].[noc_desc]' />
          <map key='[noc_desc]' value='[noc].[noc_desc]' />
          <map key='[predicted_vacancies (TSmodel_output_Canada)]' value='[TSmodel_output_Canada].[predicted_vacancies]' />
          <map key='[predicted_vacancies (canada_vacancies)]' value='[canada_vacancies].[predicted_vacancies]' />
          <map key='[predicted_vacancies]' value='[machinelearning].[predicted_vacancies]' />
          <map key='[quarter (averagewage)]' value='[averagewage].[quarter]' />
          <map key='[quarter]' value='[vacancies].[quarter]' />
          <map key='[ref_date (TSmodel_output_Canada)]' value='[TSmodel_output_Canada].[ref_date]' />
          <map key='[ref_date (averagewage)]' value='[averagewage].[ref_date]' />
          <map key='[ref_date (canada_vacancies)]' value='[canada_vacancies].[ref_date]' />
          <map key='[ref_date (machinelearning)]' value='[machinelearning].[ref_date]' />
          <map key='[ref_date]' value='[vacancies].[ref_date]' />
          <map key='[total_vacancies (TSmodel_output_Canada)]' value='[TSmodel_output_Canada].[total_vacancies]' />
          <map key='[total_vacancies (canada_vacancies)]' value='[canada_vacancies].[total_vacancies]' />
          <map key='[total_vacancies (machinelearning)]' value='[machinelearning].[total_vacancies]' />
          <map key='[total_vacancies]' value='[vacancies].[total_vacancies]' />
          <map key='[vacancy_id]' value='[vacancies].[vacancy_id]' />
          <map key='[wage_id]' value='[averagewage].[wage_id]' />
          <map key='[year (averagewage)]' value='[averagewage].[year]' />
          <map key='[year]' value='[vacancies].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>vacancy_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[vacancy_id]</local-name>
            <parent-name>[vacancies]</parent-name>
            <remote-alias>vacancy_id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancies_1CF9DFD8CD0543D291646770DB3511CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ref_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ref_date]</local-name>
            <parent-name>[vacancies]</parent-name>
            <remote-alias>ref_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancies_1CF9DFD8CD0543D291646770DB3511CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[vacancies]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancies_1CF9DFD8CD0543D291646770DB3511CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[quarter]</local-name>
            <parent-name>[vacancies]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancies_1CF9DFD8CD0543D291646770DB3511CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[vacancies]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancies_1CF9DFD8CD0543D291646770DB3511CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noc_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[noc_code]</local-name>
            <parent-name>[vacancies]</parent-name>
            <remote-alias>noc_code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancies_1CF9DFD8CD0543D291646770DB3511CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_details</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_details]</local-name>
            <parent-name>[vacancies]</parent-name>
            <remote-alias>job_details</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancies_1CF9DFD8CD0543D291646770DB3511CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vacancies</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vacancies]</local-name>
            <parent-name>[vacancies]</parent-name>
            <remote-alias>total_vacancies</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[vacancies_1CF9DFD8CD0543D291646770DB3511CD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>index</remote-name>
            <remote-type>20</remote-type>
            <local-name>[index]</local-name>
            <parent-name>[MLPmodel_output]</parent-name>
            <remote-alias>index</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REF_DATE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[REF_DATE (MLPmodel_output)]</local-name>
            <parent-name>[MLPmodel_output]</parent-name>
            <remote-alias>REF_DATE</remote-alias>
            <ordinal>10</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GEO (MLPmodel_output)]</local-name>
            <parent-name>[MLPmodel_output]</parent-name>
            <remote-alias>GEO</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>NOC</remote-name>
            <remote-type>130</remote-type>
            <local-name>[NOC (MLPmodel_output)]</local-name>
            <parent-name>[MLPmodel_output]</parent-name>
            <remote-alias>NOC</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>JOB_CHAR</remote-name>
            <remote-type>130</remote-type>
            <local-name>[JOB_CHAR (MLPmodel_output)]</local-name>
            <parent-name>[MLPmodel_output]</parent-name>
            <remote-alias>JOB_CHAR</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PREDICTED_VACANCIES</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PREDICTED_VACANCIES (MLPmodel_output)]</local-name>
            <parent-name>[MLPmodel_output]</parent-name>
            <remote-alias>PREDICTED_VACANCIES</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ref_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ref_date (TSmodel_output_Canada)]</local-name>
            <parent-name>[TSmodel_output_Canada]</parent-name>
            <remote-alias>ref_date</remote-alias>
            <ordinal>15</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TSmodel_output_Canada_4A8732E872E442938816A5A081947EC9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vacancies</remote-name>
            <remote-type>130</remote-type>
            <local-name>[total_vacancies (TSmodel_output_Canada)]</local-name>
            <parent-name>[TSmodel_output_Canada]</parent-name>
            <remote-alias>total_vacancies</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>8190</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TSmodel_output_Canada_4A8732E872E442938816A5A081947EC9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_vacancies</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_vacancies (TSmodel_output_Canada)]</local-name>
            <parent-name>[TSmodel_output_Canada]</parent-name>
            <remote-alias>predicted_vacancies</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[TSmodel_output_Canada_4A8732E872E442938816A5A081947EC9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wage_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[wage_id]</local-name>
            <parent-name>[averagewage]</parent-name>
            <remote-alias>wage_id</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ref_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ref_date (averagewage)]</local-name>
            <parent-name>[averagewage]</parent-name>
            <remote-alias>ref_date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (averagewage)]</local-name>
            <parent-name>[averagewage]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quarter</remote-name>
            <remote-type>3</remote-type>
            <local-name>[quarter (averagewage)]</local-name>
            <parent-name>[averagewage]</parent-name>
            <remote-alias>quarter</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location (averagewage)]</local-name>
            <parent-name>[averagewage]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noc_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[noc_code (averagewage)]</local-name>
            <parent-name>[averagewage]</parent-name>
            <remote-alias>noc_code</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_char</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_char]</local-name>
            <parent-name>[averagewage]</parent-name>
            <remote-alias>job_char</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg_wage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg_wage]</local-name>
            <parent-name>[averagewage]</parent-name>
            <remote-alias>avg_wage</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ref_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ref_date (canada_vacancies)]</local-name>
            <parent-name>[canada_vacancies]</parent-name>
            <remote-alias>ref_date</remote-alias>
            <ordinal>28</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[canada_vacancies_38BA6DF68145489DB5DFB279E00FD78E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vacancies</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vacancies (canada_vacancies)]</local-name>
            <parent-name>[canada_vacancies]</parent-name>
            <remote-alias>total_vacancies</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[canada_vacancies_38BA6DF68145489DB5DFB279E00FD78E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_vacancies</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_vacancies (canada_vacancies)]</local-name>
            <parent-name>[canada_vacancies]</parent-name>
            <remote-alias>predicted_vacancies</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[canada_vacancies_38BA6DF68145489DB5DFB279E00FD78E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[machinelearning]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ref_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ref_date (machinelearning)]</local-name>
            <parent-name>[machinelearning]</parent-name>
            <remote-alias>ref_date</remote-alias>
            <ordinal>33</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>geo</remote-name>
            <remote-type>130</remote-type>
            <local-name>[geo]</local-name>
            <parent-name>[machinelearning]</parent-name>
            <remote-alias>geo</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noc_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[noc_code (machinelearning)]</local-name>
            <parent-name>[machinelearning]</parent-name>
            <remote-alias>noc_code</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noc_desc</remote-name>
            <remote-type>130</remote-type>
            <local-name>[noc_desc (machinelearning)]</local-name>
            <parent-name>[machinelearning]</parent-name>
            <remote-alias>noc_desc</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>job_char</remote-name>
            <remote-type>130</remote-type>
            <local-name>[job_char (machinelearning)]</local-name>
            <parent-name>[machinelearning]</parent-name>
            <remote-alias>job_char</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vacancies</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vacancies (machinelearning)]</local-name>
            <parent-name>[machinelearning]</parent-name>
            <remote-alias>total_vacancies</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>predicted_vacancies</remote-name>
            <remote-type>5</remote-type>
            <local-name>[predicted_vacancies]</local-name>
            <parent-name>[machinelearning]</parent-name>
            <remote-alias>predicted_vacancies</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noc_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[noc_code (noc)]</local-name>
            <parent-name>[noc]</parent-name>
            <remote-alias>noc_code</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[noc_0B9F870BAAC145558901DAF1A7969D8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noc_desc</remote-name>
            <remote-type>130</remote-type>
            <local-name>[noc_desc]</local-name>
            <parent-name>[noc]</parent-name>
            <remote-alias>noc_desc</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[noc_0B9F870BAAC145558901DAF1A7969D8D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='NOC_Broad' datatype='string' name='[Calculation_2755077114843037698]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
      </column>
      <column caption='NOC_Unit' datatype='string' name='[Calculation_2755077114899828740]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;2172&quot; THEN &quot;Data administrators&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2174&quot; THEN &quot;Computer programmers&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2175&quot; THEN &quot;Web developers&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2161&quot; THEN &quot;Statistical analyst&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1112&quot; THEN &quot;Financial analyst&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
      </column>
      <column caption='Total_Vacancies_norm' datatype='real' name='[Calculation_2755077114943479815]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_vacancies]/ 1000' />
      </column>
      <column caption='GEO (MLPmodel output)' datatype='string' name='[GEO (MLPmodel_output)]' role='dimension' type='nominal' />
      <column caption='JOB CHAR (MLPmodel output)' datatype='string' name='[JOB_CHAR (MLPmodel_output)]' role='dimension' type='nominal' />
      <column caption='NOC (MLPmodel output)' datatype='string' name='[NOC (MLPmodel_output)]' role='dimension' type='nominal' />
      <column caption='NOC_Broad_Units' datatype='string' name='[NOC_Broad (copy)_2755077114930925573]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSEIF  [noc_code (noc)]=&quot;2172&quot; THEN &quot;unitData administrators&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2174&quot; THEN &quot;unitComputer programmers&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2175&quot; THEN &quot;unitWeb developers&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2161&quot; THEN &quot;unitStatistical analyst&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1112&quot; THEN &quot;unitFinancial analyst&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
      </column>
      <column caption='PREDICTED VACANCIES (MLPmodel output)' datatype='integer' name='[PREDICTED_VACANCIES (MLPmodel_output)]' role='measure' type='quantitative' />
      <column caption='REF DATE (MLPmodel output)' datatype='date' datatype-customized='true' name='[REF_DATE (MLPmodel_output)]' role='dimension' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='MLPmodel_output' datatype='table' name='[__tableau_internal_object_id__].[MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='TSmodel_output_Canada' datatype='table' name='[__tableau_internal_object_id__].[TSmodel_output_Canada_4A8732E872E442938816A5A081947EC9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='averagewage' datatype='table' name='[__tableau_internal_object_id__].[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='canada_vacancies' datatype='table' name='[__tableau_internal_object_id__].[canada_vacancies_38BA6DF68145489DB5DFB279E00FD78E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='machinelearning' datatype='table' name='[__tableau_internal_object_id__].[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='noc' datatype='table' name='[__tableau_internal_object_id__].[noc_0B9F870BAAC145558901DAF1A7969D8D]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='vacancies' datatype='table' name='[__tableau_internal_object_id__].[vacancies_1CF9DFD8CD0543D291646770DB3511CD]' role='measure' type='quantitative' />
      <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
      <column caption='Geo' datatype='string' name='[geo]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Index' datatype='integer' name='[index]' role='measure' type='quantitative' />
      <column caption='Job Char (Machinelearning)' datatype='string' name='[job_char (machinelearning)]' role='dimension' type='nominal' />
      <column caption='Job Char' datatype='string' name='[job_char]' role='dimension' type='nominal' />
      <column caption='Job Details' datatype='string' name='[job_details]' role='dimension' type='nominal' />
      <column caption='Location (Averagewage)' datatype='string' name='[location (averagewage)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Noc Code (Averagewage)' datatype='string' name='[noc_code (averagewage)]' role='dimension' type='nominal' />
      <column caption='Noc Code (Machinelearning)' datatype='string' name='[noc_code (machinelearning)]' role='dimension' type='nominal' />
      <column caption='Noc Code (Noc)' datatype='string' name='[noc_code (noc)]' role='dimension' type='nominal' />
      <column caption='Noc Code' datatype='string' name='[noc_code]' role='dimension' type='nominal' />
      <column caption='Noc Desc (Machinelearning)' datatype='string' name='[noc_desc (machinelearning)]' role='dimension' type='nominal' />
      <column caption='Noc Desc' datatype='string' name='[noc_desc]' role='dimension' type='nominal' />
      <column caption='predicted vacancies (TSmodel output Canada)' datatype='real' name='[predicted_vacancies (TSmodel_output_Canada)]' role='measure' type='quantitative' />
      <column caption='Predicted Vacancies (Canada Vacancies)' datatype='real' name='[predicted_vacancies (canada_vacancies)]' role='measure' type='quantitative' />
      <column caption='ML_Predicted_JV' datatype='real' name='[predicted_vacancies]' role='measure' type='quantitative' />
      <column caption='Quarter (Averagewage)' datatype='integer' name='[quarter (averagewage)]' role='dimension' type='quantitative' />
      <column caption='Quarter' datatype='integer' name='[quarter]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Quarter 1' />
          <alias key='2' value='Quarter 2' />
          <alias key='3' value='Quarter 3' />
          <alias key='4' value='Quarter 4' />
        </aliases>
      </column>
      <column caption='ref date (TSmodel output Canada)' datatype='date' datatype-customized='true' name='[ref_date (TSmodel_output_Canada)]' role='dimension' type='ordinal' />
      <column caption='Ref Date (Averagewage)' datatype='date' name='[ref_date (averagewage)]' role='dimension' type='ordinal' />
      <column caption='Ref Date (Canada Vacancies)' datatype='date' name='[ref_date (canada_vacancies)]' role='dimension' type='ordinal' />
      <column caption='Ref Date (Machinelearning)' datatype='date' name='[ref_date (machinelearning)]' role='dimension' type='ordinal' />
      <column caption='Ref Date' datatype='date' name='[ref_date]' role='dimension' type='ordinal' />
      <column caption='total vacancies (TSmodel output Canada)' datatype='string' name='[total_vacancies (TSmodel_output_Canada)]' role='dimension' type='nominal' />
      <column caption='Total Vacancies (Canada Vacancies)' datatype='real' name='[total_vacancies (canada_vacancies)]' role='measure' type='quantitative' />
      <column caption='ML_Vacancies' datatype='real' name='[total_vacancies (machinelearning)]' role='measure' type='quantitative' />
      <column caption='Total Vacancies' datatype='real' name='[total_vacancies]' role='measure' type='quantitative' />
      <column caption='Vacancy Id' datatype='integer' name='[vacancy_id]' role='dimension' type='ordinal' />
      <column caption='Wage Id' datatype='integer' name='[wage_id]' role='dimension' type='ordinal' />
      <column caption='Year (Averagewage)' datatype='integer' name='[year (averagewage)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[averagewage_7B0632A640E344BEBDE89B6231CEBEDA]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:averagewage_7B0632A640E344BEBDE89B6231CEBEDA:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[canada_vacancies_38BA6DF68145489DB5DFB279E00FD78E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:canada_vacancies_38BA6DF68145489DB5DFB279E00FD78E:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[machinelearning_CA1390229E114C3E9812CEAE3C66CAFE]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:machinelearning_CA1390229E114C3E9812CEAE3C66CAFE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[noc_0B9F870BAAC145558901DAF1A7969D8D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:noc_0B9F870BAAC145558901DAF1A7969D8D:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[vacancies_1CF9DFD8CD0543D291646770DB3511CD]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:vacancies_1CF9DFD8CD0543D291646770DB3511CD:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vacancies]' derivation='Avg' name='[avg:total_vacancies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2755077114843037698]' derivation='None' name='[none:Calculation_2755077114843037698:nk]' pivot='key' type='nominal' />
      <column-instance column='[job_char]' derivation='None' name='[none:job_char:nk]' pivot='key' type='nominal' />
      <column-instance column='[job_details]' derivation='None' name='[none:job_details:nk]' pivot='key' type='nominal' />
      <column-instance column='[location (averagewage)]' derivation='None' name='[none:location (averagewage):nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[noc_desc]' derivation='None' name='[none:noc_desc:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2755077114943479815]' derivation='Sum' name='[sum:Calculation_2755077114943479815:qk]' pivot='key' type='quantitative' />
      <column-instance column='[PREDICTED_VACANCIES (MLPmodel_output)]' derivation='Sum' name='[sum:PREDICTED_VACANCIES (MLPmodel_output):qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg_wage]' derivation='Sum' name='[sum:avg_wage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[index]' derivation='Sum' name='[sum:index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted_vacancies (TSmodel_output_Canada)]' derivation='Sum' name='[sum:predicted_vacancies (TSmodel_output_Canada):qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted_vacancies (canada_vacancies)]' derivation='Sum' name='[sum:predicted_vacancies (canada_vacancies):qk]' pivot='key' type='quantitative' />
      <column-instance column='[predicted_vacancies]' derivation='Sum' name='[sum:predicted_vacancies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vacancies (canada_vacancies)]' derivation='Sum' name='[sum:total_vacancies (canada_vacancies):qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vacancies (machinelearning)]' derivation='Sum' name='[sum:total_vacancies (machinelearning):qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vacancies]' derivation='Sum' name='[sum:total_vacancies:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Job Char)' hidden='true' name='[Action (Job Char)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[job_char]' />
        </groupfilter>
      </group>
      <group caption='Action (Job Details)' hidden='true' name='[Action (Job Details)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[job_details]' />
        </groupfilter>
      </group>
      <group caption='Action (Location (Averagewage))' hidden='true' name='[Action (Location (Averagewage))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location (averagewage)]' />
        </groupfilter>
      </group>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group caption='Action (NOC_Broad)' hidden='true' name='[Action (NOC_Broad)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_2755077114843037698]' />
        </groupfilter>
      </group>
      <group caption='Action (Noc Code,Noc Desc)' hidden='true' name='[Action (Noc Code,Noc Desc)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[noc_code]' />
          <groupfilter function='level-members' level='[noc_desc]' />
        </groupfilter>
      </group>
      <group caption='Action (Noc Desc)' hidden='true' name='[Action (Noc Desc)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[noc_desc]' />
        </groupfilter>
      </group>
      <group caption='Action (Noc Desc,Quarter)' hidden='true' name='[Action (Noc Desc,Quarter)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[noc_desc]' />
          <groupfilter function='level-members' level='[quarter]' />
        </groupfilter>
      </group>
      <group caption='Action (Quarter)' hidden='true' name='[Action (Quarter)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[quarter]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yukon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northwest Territories&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nunavut&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location (averagewage):nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Nunavut&quot;</bucket>
            </map>
            <map to='#2e648e'>
              <bucket>&quot;Northwest Territories&quot;</bucket>
            </map>
            <map to='#317097'>
              <bucket>&quot;Yukon&quot;</bucket>
            </map>
            <map to='#347da0'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#3589a9'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#3b95b1'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#45a2b9'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#5aadbf'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#6eb8c5'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#81c3cb'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#93cdcf'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#a7d8d3'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:noc_desc:nk]' palette='color_blind_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;Management occupations&quot;</bucket>
            </map>
            <map to='#57606c'>
              <bucket>&quot;Occupations in art, culture, recreation and sport&quot;</bucket>
            </map>
            <map to='#5fa2ce'>
              <bucket>&quot;Occupations in education, law and social, community and government services&quot;</bucket>
            </map>
            <map to='#7b848f'>
              <bucket>&quot;Business, finance and administration occupations&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;Health occupations&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;Natural resources, agriculture and related production occupations&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;Trades, transport and equipment operators and related occupations&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;Sales and service occupations&quot;</bucket>
            </map>
            <map to='#fc7d0b'>
              <bucket>&quot;Natural and applied sciences and related occupations&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;Occupations in manufacturing and utilities&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:job_details:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Full-time&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>%null%</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Part-time&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:job_char:nk]' palette='blue_teal_10_0' type='palette'>
            <map to='#2c5985'>
              <bucket>&quot;Part-time&quot;</bucket>
            </map>
            <map to='#bce4d8'>
              <bucket>&quot;Full-time&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2755077114843037698:nk]' palette='tableau20_10_0' type='palette'>
            <map to='#1170aa'>
              <bucket>&quot;zOthers_nocs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Management&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Education, law and social, community and government&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sales and service&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Natural and applied sciences&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Business, finance and administration&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trades, transport and equipment&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Natural resources, agriculture&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Test&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Art, culture, recreation and sport&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:predicted_vacancies (canada_vacancies):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[avg:Calculation_2016346038876459008:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[avg:total_vacancies:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:Calculation_2016346038876459008:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:Calculation_2755077114943479815:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies (canada_vacancies):qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:avg_wage:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:predicted_vacancies (TSmodel_output_Canada):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies (machinelearning):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]:1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:in_1A6F6E30587840348400577EA8B13DB1:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:index:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:MLPmodel_output_current_prediction_A75ACD725516431FAC8F7853171D1B71:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:TSmodel_output_Canada_C99A40D972C44778BA35E2213C24C911:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:machinelearning_CA1390229E114C3E9812CEAE3C66CAFE:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:averagewage_7B0632A640E344BEBDE89B6231CEBEDA:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:noc_0B9F870BAAC145558901DAF1A7969D8D:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[avg:PREDICTED_VACANCIES:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:PREDICTED_VACANCIES (MLPmodel_output_current_prediction):qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:PREDICTED_VACANCIES (MLPmodel_output_future_prediction):qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:index (MLPmodel_output_future_prediction):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:predicted_vacancies:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:vacancies_1CF9DFD8CD0543D291646770DB3511CD:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:PREDICTED_VACANCIES (MLPmodel_output):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:PREDICTED_VACANCIES:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:MLP!Test!case0_1781A7A0FAFE4F9DB35790486C9A7324:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[usr:Calculation_3842907531804069888:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:canada_vacancies_38BA6DF68145489DB5DFB279E00FD78E:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1gmioib0088thf1bsq5b71apq648].[__tableau_internal_object_id__].[cnt:MLPmodel_output_future_prediction_794643BBBC4C4D0B9D95F08A383126BE:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='MLPmodel_output' id='MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1'>
            <properties context=''>
              <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='MLPmodel_output' table='[public].[MLPmodel_output]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='REF_DATE' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='TSmodel_output_Canada' id='TSmodel_output_Canada_4A8732E872E442938816A5A081947EC9'>
            <properties context=''>
              <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='TSmodel_output_Canada' table='[public].[TSmodel_output_Canada]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='ref_date' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='averagewage' id='averagewage_7B0632A640E344BEBDE89B6231CEBEDA'>
            <properties context=''>
              <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='averagewage' table='[public].[averagewage]' type='table' />
            </properties>
          </object>
          <object caption='canada_vacancies' id='canada_vacancies_38BA6DF68145489DB5DFB279E00FD78E'>
            <properties context=''>
              <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='canada_vacancies' table='[public].[canada_vacancies]' type='table' />
            </properties>
          </object>
          <object caption='machinelearning' id='machinelearning_CA1390229E114C3E9812CEAE3C66CAFE'>
            <properties context=''>
              <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='machinelearning' table='[public].[machinelearning]' type='table' />
            </properties>
          </object>
          <object caption='noc' id='noc_0B9F870BAAC145558901DAF1A7969D8D'>
            <properties context=''>
              <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='noc' table='[public].[noc]' type='table' />
            </properties>
          </object>
          <object caption='vacancies' id='vacancies_1CF9DFD8CD0543D291646770DB3511CD'>
            <properties context=''>
              <relation connection='postgres.1yg2bhp1qawoxl1887bx70g7vyd3' name='vacancies' table='[public].[vacancies]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[ref_date]' />
                <expression op='[REF_DATE (MLPmodel_output)]' />
              </expression>
              <expression op='='>
                <expression op='[location]' />
                <expression op='[GEO (MLPmodel_output)]' />
              </expression>
              <expression op='='>
                <expression op='[job_details]' />
                <expression op='[JOB_CHAR (MLPmodel_output)]' />
              </expression>
            </expression>
            <first-end-point object-id='vacancies_1CF9DFD8CD0543D291646770DB3511CD' />
            <second-end-point object-id='MLPmodel_output_1F10776D659F4BC1A94EBAC5A65FB4B1' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[ref_date]' />
              <expression op='[ref_date (TSmodel_output_Canada)]' />
            </expression>
            <first-end-point object-id='vacancies_1CF9DFD8CD0543D291646770DB3511CD' />
            <second-end-point object-id='TSmodel_output_Canada_4A8732E872E442938816A5A081947EC9' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[ref_date]' />
                <expression op='[ref_date (averagewage)]' />
              </expression>
              <expression op='='>
                <expression op='[location]' />
                <expression op='[location (averagewage)]' />
              </expression>
              <expression op='='>
                <expression op='[noc_code]' />
                <expression op='[noc_code (averagewage)]' />
              </expression>
              <expression op='='>
                <expression op='[job_details]' />
                <expression op='[job_char]' />
              </expression>
            </expression>
            <first-end-point object-id='vacancies_1CF9DFD8CD0543D291646770DB3511CD' />
            <second-end-point object-id='averagewage_7B0632A640E344BEBDE89B6231CEBEDA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[ref_date]' />
              <expression op='[ref_date (canada_vacancies)]' />
            </expression>
            <first-end-point object-id='vacancies_1CF9DFD8CD0543D291646770DB3511CD' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='canada_vacancies_38BA6DF68145489DB5DFB279E00FD78E' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[ref_date]' />
                <expression op='[ref_date (machinelearning)]' />
              </expression>
              <expression op='='>
                <expression op='[location]' />
                <expression op='[geo]' />
              </expression>
              <expression op='='>
                <expression op='[noc_code]' />
                <expression op='[noc_code (machinelearning)]' />
              </expression>
              <expression op='='>
                <expression op='[job_details]' />
                <expression op='[job_char (machinelearning)]' />
              </expression>
            </expression>
            <first-end-point object-id='vacancies_1CF9DFD8CD0543D291646770DB3511CD' />
            <second-end-point object-id='machinelearning_CA1390229E114C3E9812CEAE3C66CAFE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[noc_code]' />
              <expression op='[noc_code (noc)]' />
            </expression>
            <first-end-point object-id='vacancies_1CF9DFD8CD0543D291646770DB3511CD' />
            <second-end-point _.fcp.ObjectModelRelationshipPerfOptions.true...is-db-set-unique-key='true' object-id='noc_0B9F870BAAC145558901DAF1A7969D8D' unique-key='true' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_49B760E25A0341A6A4641C4DB6E06A76]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='db_Provines' type='sheet' worksheet='W_Province Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='db_Provines' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_70BB17C16E5244C285F48E62758032C9]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='db_Provines' type='sheet' worksheet='W_Province_bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='db_Provines' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_00C37551A8494410A9573D465106474A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='db_Provines' type='sheet' worksheet='W_Province_pie' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='db_Provines' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_94027FF0C46D413BB7678F29F32F2BC1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='db_General' type='sheet' worksheet='Wage_JV_2' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='db_General' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_ECBFD43FB5DD480DA4EC14FECE16F402]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='db_General' type='sheet' worksheet='W_NOC_bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='db_General' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_3035B5E87C5B4545909D465D38331EBE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='db_General' type='sheet' worksheet='W_Province_bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='db_General' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_7F5290839AAB4C3F8184BF19E48C5844]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='db_General' type='sheet' worksheet='W_Job_Type_pie' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='db_General' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='ML_JV_Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vacancies</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='PREDICTED VACANCIES (MLPmodel output)' datatype='integer' name='[PREDICTED_VACANCIES (MLPmodel_output)]' role='measure' type='quantitative' />
            <column caption='REF DATE (MLPmodel output)' datatype='date' datatype-customized='true' name='[REF_DATE (MLPmodel_output)]' role='dimension' type='ordinal' />
            <column-instance column='[PREDICTED_VACANCIES (MLPmodel_output)]' derivation='Sum' name='[sum:PREDICTED_VACANCIES (MLPmodel_output):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vacancies (canada_vacancies)]' derivation='Sum' name='[sum:total_vacancies (canada_vacancies):qk]' pivot='key' type='quantitative' />
            <column caption='Total Vacancies (Canada Vacancies)' datatype='real' name='[total_vacancies (canada_vacancies)]' role='measure' type='quantitative' />
            <column-instance column='[REF_DATE (MLPmodel_output)]' derivation='Quarter-Trunc' name='[tqr:REF_DATE (MLPmodel_output):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:PREDICTED_VACANCIES (MLPmodel_output):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies (canada_vacancies):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='13' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gmioib0088thf1bsq5b71apq648].[Multiple Values]</rows>
        <cols>[federated.1gmioib0088thf1bsq5b71apq648].[tqr:REF_DATE (MLPmodel_output):qk]</cols>
      </table>
      <simple-id uuid='{DD78BA8E-D2C6-444C-907A-5849D06D8F89}' />
    </worksheet>
    <worksheet name='TS_JV_Total'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vacancies</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='predicted vacancies (TSmodel output Canada)' datatype='real' name='[predicted_vacancies (TSmodel_output_Canada)]' role='measure' type='quantitative' />
            <column caption='ref date (TSmodel output Canada)' datatype='date' datatype-customized='true' name='[ref_date (TSmodel_output_Canada)]' role='dimension' type='ordinal' />
            <column-instance column='[predicted_vacancies (TSmodel_output_Canada)]' derivation='Sum' name='[sum:predicted_vacancies (TSmodel_output_Canada):qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vacancies (canada_vacancies)]' derivation='Sum' name='[sum:total_vacancies (canada_vacancies):qk]' pivot='key' type='quantitative' />
            <column caption='Total Vacancies (Canada Vacancies)' datatype='real' name='[total_vacancies (canada_vacancies)]' role='measure' type='quantitative' />
            <column-instance column='[ref_date (TSmodel_output_Canada)]' derivation='Quarter-Trunc' name='[tqr:ref_date (TSmodel_output_Canada):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies (canada_vacancies):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:predicted_vacancies (TSmodel_output_Canada):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gmioib0088thf1bsq5b71apq648].[Multiple Values]</rows>
        <cols>[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (TSmodel_output_Canada):qk]</cols>
      </table>
      <simple-id uuid='{D3C4A6CA-FF33-474B-9DED-C50E4E3C7191}' />
    </worksheet>
    <worksheet name='W_Job_Type_pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AvgWage by </run>
            <run bold='true' fontcolor='#59a14f'>JobType</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='NOC_Broad' datatype='string' name='[Calculation_2755077114843037698]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
            </column>
            <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
            <column caption='Job Char' datatype='string' name='[job_char]' role='dimension' type='nominal' />
            <column caption='Location (Averagewage)' datatype='string' name='[location (averagewage)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Noc Code (Noc)' datatype='string' name='[noc_code (noc)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2755077114843037698]' derivation='None' name='[none:Calculation_2755077114843037698:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_char]' derivation='None' name='[none:job_char:nk]' pivot='key' type='nominal' />
            <column-instance column='[location (averagewage)]' derivation='None' name='[none:location (averagewage):nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[quarter (averagewage)]' derivation='None' name='[none:quarter (averagewage):qk]' pivot='key' type='quantitative' />
            <column caption='Quarter (Averagewage)' datatype='integer' name='[quarter (averagewage)]' role='dimension' type='quantitative' />
            <column caption='Ref Date (Averagewage)' datatype='date' name='[ref_date (averagewage)]' role='dimension' type='ordinal' />
            <column-instance column='[ref_date (averagewage)]' derivation='Year' name='[yr:ref_date (averagewage):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]'>
            <groupfilter function='level-members' level='[location (averagewage)]' user:ui-action-filter='[Action6_3035B5E87C5B4545909D465D38331EBE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (NOC_Broad)]'>
            <groupfilter function='level-members' level='[Calculation_2755077114843037698]' user:ui-action-filter='[Action5_ECBFD43FB5DD480DA4EC14FECE16F402]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Art, culture, recreation and sport&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Business, finance and administration&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Education, law and social, community and government&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Health&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Management&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural and applied sciences&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural resources, agriculture&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Sales and service&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Trades, transport and equipment&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:job_char:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;British Columbia&quot;' />
              <groupfilter from='&quot;Manitoba&quot;' function='range' level='[none:location (averagewage):nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:quarter (averagewage):qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[yr:ref_date (averagewage):ok]'>
            <groupfilter function='member' level='[yr:ref_date (averagewage):ok]' member='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:location:nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[yr:ref_date (averagewage):ok]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:quarter (averagewage):qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (NOC_Broad)]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D321827C-B438-4BA7-AAAA-12578A763053}' />
    </worksheet>
    <worksheet name='W_NOC_bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AvgWage by </run>
            <run bold='true' fontcolor='#d77f11'>NOC</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='NOC_Broad' datatype='string' name='[Calculation_2755077114843037698]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
            </column>
            <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
            <column caption='Job Char' datatype='string' name='[job_char]' role='dimension' type='nominal' />
            <column caption='Location (Averagewage)' datatype='string' name='[location (averagewage)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Noc Code (Noc)' datatype='string' name='[noc_code (noc)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2755077114843037698]' derivation='None' name='[none:Calculation_2755077114843037698:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_char]' derivation='None' name='[none:job_char:nk]' pivot='key' type='nominal' />
            <column-instance column='[location (averagewage)]' derivation='None' name='[none:location (averagewage):nk]' pivot='key' type='nominal' />
            <column-instance column='[noc_code (noc)]' derivation='None' name='[none:noc_code (noc):nk]' pivot='key' type='nominal' />
            <column-instance column='[ref_date]' derivation='Quarter' name='[qr:ref_date:ok]' pivot='key' type='ordinal' />
            <column caption='Ref Date' datatype='date' name='[ref_date]' role='dimension' type='ordinal' />
            <column-instance column='[ref_date]' derivation='Year' name='[yr:ref_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Job Char)]'>
            <groupfilter function='level-members' level='[job_char]' user:ui-action-filter='[Action7_7F5290839AAB4C3F8184BF19E48C5844]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]'>
            <groupfilter function='level-members' level='[location (averagewage)]' user:ui-action-filter='[Action6_3035B5E87C5B4545909D465D38331EBE]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[location]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;British Columbia&quot;' />
              <groupfilter from='&quot;Manitoba&quot;' function='range' level='[location]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Art, culture, recreation and sport&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Business, finance and administration&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Education, law and social, community and government&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Health&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Management&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural and applied sciences&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural resources, agriculture&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Sales and service&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Trades, transport and equipment&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]' direction='DESC' using='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:job_char:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;British Columbia&quot;' />
              <groupfilter from='&quot;Manitoba&quot;' function='range' level='[none:location (averagewage):nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:noc_code (noc):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;0&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;2161&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;2171&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;2172&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;2173&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;2174&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;2175&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;4&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;5&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;6&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;7&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;8&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;9&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[qr:ref_date:ok]'>
            <groupfilter function='member' level='[qr:ref_date:ok]' member='4' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[yr:ref_date:ok]'>
            <groupfilter function='member' level='[yr:ref_date:ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:noc_code (noc):nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location)]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[qr:ref_date:ok]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[yr:ref_date:ok]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Job Char)]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</rows>
        <cols>[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]</cols>
      </table>
      <simple-id uuid='{FF583DDA-510E-4DFA-A2EF-9B8DB60E58D1}' />
    </worksheet>
    <worksheet name='W_NOC_pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vacancies by NOC</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='NOC_Broad' datatype='string' name='[Calculation_2755077114843037698]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
            </column>
            <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
            <column caption='Location (Averagewage)' datatype='string' name='[location (averagewage)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Noc Code (Noc)' datatype='string' name='[noc_code (noc)]' role='dimension' type='nominal' />
            <column caption='Noc Desc' datatype='string' name='[noc_desc]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2755077114843037698]' derivation='None' name='[none:Calculation_2755077114843037698:nk]' pivot='key' type='nominal' />
            <column-instance column='[location (averagewage)]' derivation='None' name='[none:location (averagewage):nk]' pivot='key' type='nominal' />
            <column-instance column='[noc_code (noc)]' derivation='None' name='[none:noc_code (noc):nk]' pivot='key' type='nominal' />
            <column-instance column='[noc_desc]' derivation='None' name='[none:noc_desc:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_vacancies]' derivation='Sum' name='[sum:total_vacancies:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vacancies' datatype='real' name='[total_vacancies]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;British Columbia&quot;' />
              <groupfilter from='&quot;Manitoba&quot;' function='range' level='[none:location (averagewage):nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:noc_code (noc):nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;0&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;1&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;2&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;3&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;4&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;5&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;6&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;7&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;8&quot;' />
              <groupfilter function='member' level='[none:noc_code (noc):nk]' member='&quot;9&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:noc_desc:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Accommodation service managers&quot;' function='range' level='[none:noc_desc:nk]' to='&quot;Tool and die makers&quot;' />
              <groupfilter from='&quot;Tour and travel guides&quot;' function='range' level='[none:noc_desc:nk]' to='&quot;Writing, translating and related communications professionals&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2019' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:noc_desc:nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:noc_code (noc):nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:year:ok]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]' />
              <size column='[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{38196E94-B753-4F1C-A4EA-9A8B2C721355}' />
    </worksheet>
    <worksheet name='W_Province Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AvgWage by Provinces map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='NOC_Broad' datatype='string' name='[Calculation_2755077114843037698]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
            </column>
            <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
            <column caption='Location (Averagewage)' datatype='string' name='[location (averagewage)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Noc Code (Noc)' datatype='string' name='[noc_code (noc)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2755077114843037698]' derivation='None' name='[none:Calculation_2755077114843037698:nk]' pivot='key' type='nominal' />
            <column-instance column='[location (averagewage)]' derivation='None' name='[none:location (averagewage):nk]' pivot='key' type='nominal' />
            <column caption='Ref Date (Averagewage)' datatype='date' name='[ref_date (averagewage)]' role='dimension' type='ordinal' />
            <column-instance column='[total_vacancies]' derivation='Sum' name='[sum:total_vacancies:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vacancies' datatype='real' name='[total_vacancies]' role='measure' type='quantitative' />
            <column-instance column='[ref_date (averagewage)]' derivation='Quarter-Trunc' name='[tqr:ref_date (averagewage):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]'>
            <groupfilter function='level-members' level='[location (averagewage)]' user:ui-action-filter='[Action2_70BB17C16E5244C285F48E62758032C9]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' filter-group='3' included-values='in-range' />
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Art, culture, recreation and sport&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Business, finance and administration&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Education, law and social, community and government&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Health&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Management&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural and applied sciences&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural resources, agriculture&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Sales and service&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Trades, transport and equipment&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;British Columbia&quot;' />
              <groupfilter from='&quot;Manitoba&quot;' function='range' level='[none:location (averagewage):nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (averagewage):qk]' filter-group='4' included-values='in-range'>
            <min>#2020-10-01 00:00:00#</min>
            <max>#2020-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (averagewage):qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gmioib0088thf1bsq5b71apq648].[Longitude (generated)]' field-type='quantitative' max='-1810381.9076141268' min='-18717366.390657682' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gmioib0088thf1bsq5b71apq648].[Latitude (generated)]' field-type='quantitative' max='11739787.981999075' min='4894245.9600198241' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]' />
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
              <geometry column='[federated.1gmioib0088thf1bsq5b71apq648].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gmioib0088thf1bsq5b71apq648].[Latitude (generated)]</rows>
        <cols>[federated.1gmioib0088thf1bsq5b71apq648].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5B5FE2F0-DCF9-4F18-8DA3-52836B7CFFD6}' />
    </worksheet>
    <worksheet name='W_Province_bar'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AvgWage by </run>
            <run bold='true' fontcolor='#499894'>Provinces</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='NOC_Broad' datatype='string' name='[Calculation_2755077114843037698]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
            </column>
            <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
            <column caption='Job Char' datatype='string' name='[job_char]' role='dimension' type='nominal' />
            <column caption='Location (Averagewage)' datatype='string' name='[location (averagewage)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Noc Code (Noc)' datatype='string' name='[noc_code (noc)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2755077114843037698]' derivation='None' name='[none:Calculation_2755077114843037698:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_char]' derivation='None' name='[none:job_char:nk]' pivot='key' type='nominal' />
            <column-instance column='[location (averagewage)]' derivation='None' name='[none:location (averagewage):nk]' pivot='key' type='nominal' />
            <column caption='Ref Date (Averagewage)' datatype='date' name='[ref_date (averagewage)]' role='dimension' type='ordinal' />
            <column-instance column='[ref_date (averagewage)]' derivation='Quarter-Trunc' name='[tqr:ref_date (averagewage):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Job Char)]'>
            <groupfilter function='level-members' level='[job_char]' user:ui-action-filter='[Action7_7F5290839AAB4C3F8184BF19E48C5844]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]'>
            <groupfilter function='level-members' level='[location (averagewage)]' user:ui-action-filter='[Action1_49B760E25A0341A6A4641C4DB6E06A76]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (NOC_Broad)]'>
            <groupfilter function='level-members' level='[Calculation_2755077114843037698]' user:ui-action-filter='[Action5_ECBFD43FB5DD480DA4EC14FECE16F402]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' filter-group='3' included-values='in-range' />
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Art, culture, recreation and sport&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Business, finance and administration&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Education, law and social, community and government&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Health&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Management&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural and applied sciences&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural resources, agriculture&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Sales and service&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Trades, transport and equipment&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:job_char:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;British Columbia&quot;' />
              <groupfilter from='&quot;Manitoba&quot;' function='range' level='[none:location (averagewage):nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' direction='DESC' using='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (averagewage):qk]' filter-group='4' included-values='in-range'>
            <min>#2020-10-01 00:00:00#</min>
            <max>#2020-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (averagewage):qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (NOC_Broad)]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Job Char)]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</rows>
        <cols>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</cols>
      </table>
      <simple-id uuid='{EE03D689-4D62-441B-A4C9-B035C2EFE323}' />
    </worksheet>
    <worksheet name='W_Province_boxplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
            <column caption='Job Char' datatype='string' name='[job_char]' role='dimension' type='nominal' />
            <column caption='Location (Averagewage)' datatype='string' name='[location (averagewage)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Noc Code (Averagewage)' datatype='string' name='[noc_code (averagewage)]' role='dimension' type='nominal' />
            <column-instance column='[job_char]' derivation='None' name='[none:job_char:nk]' pivot='key' type='nominal' />
            <column-instance column='[location (averagewage)]' derivation='None' name='[none:location (averagewage):nk]' pivot='key' type='nominal' />
            <column-instance column='[noc_code (averagewage)]' derivation='None' name='[none:noc_code (averagewage):nk]' pivot='key' type='nominal' />
            <column caption='Ref Date (Averagewage)' datatype='date' name='[ref_date (averagewage)]' role='dimension' type='ordinal' />
            <column-instance column='[ref_date (averagewage)]' derivation='Year' name='[yr:ref_date (averagewage):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;British Columbia&quot;' />
              <groupfilter from='&quot;Manitoba&quot;' function='range' level='[none:location (averagewage):nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' direction='ASC' using='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:noc_code (averagewage):nk]'>
            <groupfilter function='member' level='[none:noc_code (averagewage):nk]' member='&quot;101&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[yr:ref_date (averagewage):ok]'>
            <groupfilter function='member' level='[yr:ref_date (averagewage):ok]' member='2020' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[yr:ref_date (averagewage):ok]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:noc_code (averagewage):nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <reference-line axis-column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</rows>
        <cols>([federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk] / [federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk])</cols>
      </table>
      <simple-id uuid='{755F4664-E990-43F6-BED8-E379FAE018C1}' />
    </worksheet>
    <worksheet name='W_Province_pie'>
      <layout-options>
        <title>
          <formatted-text>
            <run>AvgWage and JobVacancies by Provinces</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='NOC_Broad' datatype='string' name='[Calculation_2755077114843037698]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
            </column>
            <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
            <column caption='Location (Averagewage)' datatype='string' name='[location (averagewage)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Noc Code (Noc)' datatype='string' name='[noc_code (noc)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2755077114843037698]' derivation='None' name='[none:Calculation_2755077114843037698:nk]' pivot='key' type='nominal' />
            <column-instance column='[location (averagewage)]' derivation='None' name='[none:location (averagewage):nk]' pivot='key' type='nominal' />
            <column caption='Ref Date (Averagewage)' datatype='date' name='[ref_date (averagewage)]' role='dimension' type='ordinal' />
            <column-instance column='[avg_wage]' derivation='Sum' name='[sum:avg_wage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vacancies]' derivation='Sum' name='[sum:total_vacancies:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vacancies' datatype='real' name='[total_vacancies]' role='measure' type='quantitative' />
            <column-instance column='[ref_date (averagewage)]' derivation='Quarter-Trunc' name='[tqr:ref_date (averagewage):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]'>
            <groupfilter function='level-members' level='[location (averagewage)]' user:ui-action-filter='[Action1_49B760E25A0341A6A4641C4DB6E06A76]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' filter-group='3' included-values='in-range' />
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Art, culture, recreation and sport&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Business, finance and administration&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Education, law and social, community and government&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Health&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Management&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural and applied sciences&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural resources, agriculture&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Sales and service&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Trades, transport and equipment&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;British Columbia&quot;' />
              <groupfilter from='&quot;Manitoba&quot;' function='range' level='[none:location (averagewage):nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Ontario&quot;</bucket>
              <bucket>&quot;Quebec&quot;</bucket>
              <bucket>&quot;British Columbia&quot;</bucket>
              <bucket>&quot;Alberta&quot;</bucket>
              <bucket>&quot;Manitoba&quot;</bucket>
              <bucket>&quot;Nova Scotia&quot;</bucket>
              <bucket>&quot;New Brunswick&quot;</bucket>
              <bucket>&quot;Saskatchewan&quot;</bucket>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
              <bucket>&quot;Yukon&quot;</bucket>
              <bucket>&quot;Northwest Territories&quot;</bucket>
              <bucket>&quot;Nunavut&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (averagewage):qk]' filter-group='4' included-values='in-range'>
            <min>#2020-10-01 00:00:00#</min>
            <max>#2020-10-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (averagewage):qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <wedge-size column='[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' />
              <size column='[federated.1gmioib0088thf1bsq5b71apq648].[sum:avg_wage:qk]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>22.27</value>
                <value>&quot;Newfoundland and Labrador&quot;</value>
                <value>222.69999999999999</value>
                <value>4485.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>24.321874999999999</value>
                <value>&quot;Alberta&quot;</value>
                <value>389.14999999999998</value>
                <value>43960.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>30.800000000000001</value>
                <value>&quot;Northwest Territories&quot;</value>
                <value>92.400000000000006</value>
                <value>170.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>18.585000000000001</value>
                <value>&quot;Prince Edward Island&quot;</value>
                <value>185.84999999999999</value>
                <value>1345.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:avg_wage:qk]</field>
                  <field>[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>21.475000000000005</value>
                <value>&quot;New Brunswick&quot;</value>
                <value>257.70000000000005</value>
                <value>11800.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{2558093F-35B8-4FDA-AD6D-F2C9117B2829}' />
    </worksheet>
    <worksheet name='Wage_JV_2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b'>AvgWage</run>
            <run> vs </run>
            <run bold='true' fontcolor='#4e79a7'>Job Vacancies</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='NOC_Broad' datatype='string' name='[Calculation_2755077114843037698]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
            </column>
            <column caption='Total_Vacancies_norm' datatype='real' name='[Calculation_2755077114943479815]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_vacancies]/ 1000' />
            </column>
            <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
            <column caption='Job Char' datatype='string' name='[job_char]' role='dimension' type='nominal' />
            <column caption='Location (Averagewage)' datatype='string' name='[location (averagewage)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Noc Code (Noc)' datatype='string' name='[noc_code (noc)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2755077114843037698]' derivation='None' name='[none:Calculation_2755077114843037698:nk]' pivot='key' type='nominal' />
            <column-instance column='[job_char]' derivation='None' name='[none:job_char:nk]' pivot='key' type='nominal' />
            <column-instance column='[location (averagewage)]' derivation='None' name='[none:location (averagewage):nk]' pivot='key' type='nominal' />
            <column caption='Ref Date (Averagewage)' datatype='date' name='[ref_date (averagewage)]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2755077114943479815]' derivation='Sum' name='[sum:Calculation_2755077114943479815:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vacancies' datatype='real' name='[total_vacancies]' role='measure' type='quantitative' />
            <column-instance column='[ref_date (averagewage)]' derivation='Quarter-Trunc' name='[tqr:ref_date (averagewage):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gmioib0088thf1bsq5b71apq648].[sum:Calculation_2755077114943479815:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Job Char)]'>
            <groupfilter function='level-members' level='[job_char]' user:ui-action-filter='[Action7_7F5290839AAB4C3F8184BF19E48C5844]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]'>
            <groupfilter function='level-members' level='[location (averagewage)]' user:ui-action-filter='[Action1_49B760E25A0341A6A4641C4DB6E06A76]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[Action (NOC_Broad)]'>
            <groupfilter function='level-members' level='[Calculation_2755077114843037698]' user:ui-action-filter='[Action5_ECBFD43FB5DD480DA4EC14FECE16F402]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' filter-group='3' included-values='in-range' />
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]' filter-group='6'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Art, culture, recreation and sport&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Business, finance and administration&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Education, law and social, community and government&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Health&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Management&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural and applied sciences&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural resources, agriculture&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Sales and service&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Trades, transport and equipment&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:job_char:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;Alberta&quot;' />
              <groupfilter function='member' level='[none:location (averagewage):nk]' member='&quot;British Columbia&quot;' />
              <groupfilter from='&quot;Manitoba&quot;' function='range' level='[none:location (averagewage):nk]' to='&quot;Yukon&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (averagewage):qk]' included-values='in-range'>
            <min>#2017-01-01 00:00:00#</min>
            <max>#2021-04-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Location (Averagewage))]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (averagewage):qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (NOC_Broad)]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[Action (Job Char)]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[sum:Calculation_2755077114943479815:qk]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' value='c&quot;$&quot;#,##0.0;(&quot;$&quot;#,##0.0)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' palette='red_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1gmioib0088thf1bsq5b71apq648].[sum:Calculation_2755077114943479815:qk]' palette='green_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gmioib0088thf1bsq5b71apq648].[sum:Calculation_2755077114943479815:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[sum:Calculation_2755077114943479815:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1gmioib0088thf1bsq5b71apq648].[sum:Calculation_2755077114943479815:qk] + [federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk])</rows>
        <cols>[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date (averagewage):qk]</cols>
      </table>
      <simple-id uuid='{ABE2300A-5259-42FD-BCB2-032CA1996C14}' />
    </worksheet>
    <worksheet name='Wages_JV'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Vacancies and AvgWage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='vacancies (Vacancies)' name='federated.1gmioib0088thf1bsq5b71apq648' />
          </datasources>
          <datasource-dependencies datasource='federated.1gmioib0088thf1bsq5b71apq648'>
            <column caption='NOC_Broad' datatype='string' name='[Calculation_2755077114843037698]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [noc_code (noc)]=&quot;0&quot; THEN &quot;Management&quot;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;1&quot; THEN &quot;Business, finance and administration&quot;&#10;ELSEIF [noc_code (noc)]=&quot;2&quot; THEN &quot;Natural and applied sciences&quot;&#10;ELSEIF [noc_code (noc)]=&quot;3&quot; THEN &quot;Health&quot;&#10;ELSEIF [noc_code (noc)]=&quot;4&quot; THEN &quot;Education, law and social, community and government&quot;&#10;ELSEIF [noc_code (noc)]=&quot;5&quot; THEN &quot;Art, culture, recreation and sport&quot;&#10;ELSEIF [noc_code (noc)]=&quot;6&quot; THEN &quot;Sales and service&quot;&#10;ELSEIF [noc_code (noc)]=&quot;7&quot; THEN &quot;Trades, transport and equipment&quot;&#10;ELSEIF [noc_code (noc)]=&quot;8&quot; THEN &quot;Natural resources, agriculture&quot;&#10;ELSEIF [noc_code (noc)]=&quot;9&quot; THEN &quot;Manufacturing&quot;&#10;ELSE &quot;zOthers_nocs&quot;&#10;END' />
            </column>
            <column-instance column='[avg_wage]' derivation='Avg' name='[avg:avg_wage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_vacancies]' derivation='Avg' name='[avg:total_vacancies:qk]' pivot='key' type='quantitative' />
            <column caption='Avg Wage' datatype='real' name='[avg_wage]' role='measure' type='quantitative' />
            <column caption='Geo' datatype='string' name='[geo]' role='dimension' type='nominal' />
            <column caption='Noc Code (Noc)' datatype='string' name='[noc_code (noc)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2755077114843037698]' derivation='None' name='[none:Calculation_2755077114843037698:nk]' pivot='key' type='nominal' />
            <column-instance column='[geo]' derivation='None' name='[none:geo:nk]' pivot='key' type='nominal' />
            <column caption='Ref Date' datatype='date' name='[ref_date]' role='dimension' type='ordinal' />
            <column-instance column='[total_vacancies]' derivation='Sum' name='[sum:total_vacancies:qk]' pivot='key' type='quantitative' />
            <column caption='Total Vacancies' datatype='real' name='[total_vacancies]' role='measure' type='quantitative' />
            <column-instance column='[ref_date]' derivation='Quarter-Trunc' name='[tqr:ref_date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:total_vacancies:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Art, culture, recreation and sport&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Business, finance and administration&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Education, law and social, community and government&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Health&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Management&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Manufacturing&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural and applied sciences&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Natural resources, agriculture&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Sales and service&quot;' />
              <groupfilter function='member' level='[none:Calculation_2755077114843037698:nk]' member='&quot;Trades, transport and equipment&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1gmioib0088thf1bsq5b71apq648].[none:geo:nk]'>
            <groupfilter function='member' level='[none:geo:nk]' member='&quot;Canada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[avg:total_vacancies:qk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:geo:nk]</column>
            <column>[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' value='c&quot;$&quot;#,##0.0;(&quot;$&quot;#,##0.0)' />
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:total_vacancies:qk]' value='' />
            <format attr='text-format' field='[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]' />
              <text column='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk] + [federated.1gmioib0088thf1bsq5b71apq648].[sum:total_vacancies:qk])</rows>
        <cols>[federated.1gmioib0088thf1bsq5b71apq648].[tqr:ref_date:qk]</cols>
      </table>
      <simple-id uuid='{DE66E26B-12EA-44C7-9BBF-F677AD68C173}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='db_General'>
      <style />
      <size maxheight='1000' maxwidth='1200' minheight='1000' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='27400' id='44' name='W_Job_Type_pie' w='16917' x='4000' y='2600' />
        <zone h='39800' id='45' name='W_NOC_bar' w='49833' x='1167' y='47200' />
        <zone h='36600' id='46' name='W_Province_bar' w='45250' x='53000' y='48700' />
        <zone h='43900' id='82' name='Wage_JV_2' w='75750' x='23667' y='2600' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='128' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='127' param='vert' type-v2='layout-flow' w='98666' x='667' y='800'>
                <zone fixed-size='274' h='27400' id='44' is-fixed='true' name='W_Job_Type_pie' w='16917' x='4000' y='2600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43900' id='82' is-fixed='true' name='Wage_JV_2' w='75750' x='23667' y='2600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39800' id='45' is-fixed='true' name='W_NOC_bar' w='49833' x='1167' y='47200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36600' id='46' is-fixed='true' name='W_Province_bar' w='45250' x='53000' y='48700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DD701691-9775-4A87-BD69-BE118E230E8A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='db_ML'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='25' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{02A469D7-3C82-4755-8D59-075F070341FB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='db_Provines'>
      <style />
      <size maxheight='1000' maxwidth='1200' minheight='1000' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='28' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='31' param='horz' type-v2='layout-flow' w='98666' x='667' y='800'>
            <zone h='98400' id='29' type-v2='layout-basic' w='98666' x='667' y='800' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='40200' id='36' name='W_Province Map' w='96083' x='1083' y='1100' />
        <zone h='36700' id='51' name='W_Province_bar' w='49750' x='667' y='43900' />
        <zone h='35300' id='85' name='W_Province_pie' w='45083' x='53583' y='44100' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='141' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='140' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='40200' id='36' is-fixed='true' name='W_Province Map' w='96083' x='1083' y='1100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36700' id='51' is-fixed='true' name='W_Province_bar' w='49750' x='667' y='43900'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35300' id='85' is-fixed='true' name='W_Province_pie' w='45083' x='53583' y='44100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2F9535C4-1700-4473-B879-D4DCC7CF6DED}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='ML_JV_Total'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='13' param='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gmioib0088thf1bsq5b71apq648].[none:NOC (MLPmodel_output):nk]</field>
            <field>[federated.1gmioib0088thf1bsq5b71apq648].[none:NOC (MLPmodel_output_current_prediction):nk]</field>
            <field>[federated.1gmioib0088thf1bsq5b71apq648].[yr:REF_DATE (MLPmodel_output):ok]</field>
            <field>[federated.1gmioib0088thf1bsq5b71apq648].[yr:REF_DATE (MLPmodel_output_current_prediction):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA29A087-D781-4678-9F41-25C9C024C5C4}' />
    </window>
    <window class='worksheet' name='TS_JV_Total'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='12' param='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]</field>
            <field>[federated.1gmioib0088thf1bsq5b71apq648].[yr:ref_date (TSmodel_output_Canada):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5237B287-4C76-454B-A287-06730190551A}' />
    </window>
    <window class='worksheet' name='Wages_JV'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BA9B4881-2C3E-4609-865A-8D183DE66964}' />
    </window>
    <window class='worksheet' name='Wage_JV_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1gmioib0088thf1bsq5b71apq648].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CCDCDB6F-EDF3-4347-B7B2-1566B39B617A}' />
    </window>
    <window class='worksheet' name='W_Province Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5173BA6F-B89F-4463-8452-9A5F570C7860}' />
    </window>
    <window class='worksheet' name='W_Province_bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3F42A536-3294-4189-BAB0-55E0329358DF}' />
    </window>
    <window class='worksheet' name='W_Province_pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.1gmioib0088thf1bsq5b71apq648].[avg:avg_wage:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1gmioib0088thf1bsq5b71apq648].[sum:avg_wage:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CAF77A93-2CFA-4D5E-803A-449D55C9D5DF}' />
    </window>
    <window class='worksheet' name='W_Province_boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1gmioib0088thf1bsq5b71apq648].[none:location (averagewage):nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{811D6ADA-8B59-4C5B-B48C-9468C911E9F9}' />
    </window>
    <window class='worksheet' name='W_Job_Type_pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gmioib0088thf1bsq5b71apq648].[none:job_char:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EB3E9451-A770-40B0-847E-EF5036A61606}' />
    </window>
    <window class='worksheet' name='W_NOC_bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1gmioib0088thf1bsq5b71apq648].[none:Calculation_2755077114843037698:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CDAB1122-6F2C-4B2C-AF64-0B326B7D504C}' />
    </window>
    <window class='worksheet' name='W_NOC_pie'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{99EE6178-0268-49D8-87BF-25C7B92ECD75}' />
    </window>
    <window class='dashboard' name='db_ML'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{DA11C7FA-CA52-4B17-A0BF-0B0F0F2CB5E1}' />
    </window>
    <window class='dashboard' name='db_General' tab-color='#dec77b'>
      <viewpoints>
        <viewpoint name='W_Job_Type_pie' />
        <viewpoint name='W_NOC_bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='W_Province_bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Wage_JV_2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D19FEF3D-725A-4D6E-9DA3-9EEE5C3FDAAC}' />
    </window>
    <window class='dashboard' name='db_Provines' tab-color='#72bcbb'>
      <viewpoints>
        <viewpoint name='W_Province Map'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='W_Province_bar'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='W_Province_pie'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview selected='Desktop'>
        <device name='Medium Desktop Monitor' type='Desktop' />
      </device-preview>
      <simple-id uuid='{8A7A61F0-744C-4124-AA8E-47C1F1B06CDD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='ML_JV_Total' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='TS_JV_Total' width='384'>
      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
      w2H8fj/Hjh1jzZo1nDp1ilAoREtLCxs2bABg9+7d7N27F8dx+OY3v0kikeDb3/42hw4dorm5
      GYCKigoOHDjA/v37qa2t5dKlS+zbt++u9vOuAmDbNqOjo3g8Hp588snM4/8LV+GJiHxcfvjD
      HwK3P/k/99xzPP7445w9e5bDhw9z7tw5Dh06xObNmwHo7u7m8uXLbNiwga6uLvx+P+fPnyc/
      Px+Px0NhYSF9fX2Ew2GGhoYYGhrikUceYffu3TzzzDN4PB5effXVzGvejbs6BpBMJvnNb36T
      +Xq1OzZu3MhTTz111y9+r+kYgIisJNu2GR8fZ/369SwsLPDPf/6TqqqqRbexnp+fJxaLUVJS
      wve//32++93vUlhYSHd3N/F4nObmZuLxOFevXs0855Of/CSlpaW89957XLhwgY0bN1JTU3NX
      y+PGGLPsu4FGIpHM+fq5ubmUlpYuZzP3lAIgIqvFnRWW958Oei8tOwDXr1/n17/+NdFolMrK
      Smpra/nGN75xL/bxI1EARESWtuyzgPr7+3n66af5zGc+w09+8hNmZmY+7n0TEZF7bFkBqKmp
      YWJigkAgwO9///sPHBMQEZHsd9dLQHfuuunxeEilUly9epWampqsPBNIS0AiIkszxpi7vg7g
      yJEj9Pf38/DDD7Nz504efPBBvcGKiKxCdz0DcByHmZkZent7OXfuHKFQiObmZr74xS/eq31c
      Ns0ARESWtqyDwMYYiouLqampYf369cTjccbGxu7F/omIyD101zOAtrY2XnvtNaqqqti9ezfN
      zc0EAoGsvD+PZgAiIktb1nUAQ0NDVFZW4vf779V+fWwUABGRpX2kK4FXAwVARGRpy74QTERE
      Vj8FQETEpRQAERGXUgBERFxKARARcSkFQETEpRQAERGXWtaXwn/cEokEx48fz5yzv3//fuLx
      OH/9618JBAKUlJSwZ88e/v3vf9PT00N+fj779+9ncHCQ8vJySktLOXPmDE1NTRQUFKz0cERE
      VoWsuBAsnU6zsLBAIBDg0qVL5OTkYFkWtm2zadMmjDHYts3hw4d5+umn6e7uxhhDLBbjgQce
      YG5ujqGhIfbt27folhS6EExEZGnLuh30vWBZFrFYjO7ubm7cuMHnPvc5/vWvfzE9PU00GqWh
      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
      R0RkVciKGUAikeDWrVu0trZSVFREb28v586do7S0lJ07d3Ly5EnS6TQnT57kscceIxaLMTAw
      wMjICLOzs4yPj9Pf309+fv5KD0VEZNXIihmA3++npaWFZDLJ6OgoW7dupauriwMHDuDxePD7
      /UxNTVFZWUl+fj5bt27lrbfeoqioiJs3b3L58mW+8pWvYIzBcRxs285sO5lMkkqlVnB0IiLZ
      KSsCAHDr1i2OHz/Ojh07qK6upqurC4/n9gTFsizi8TherzfzezqdBuDKlSt4vV5yc3Mz23p/
      AHJycjLbERGR/8iKAKTTadrb23nqqacoLS0FIC8vj5mZGQoLC5mbm2PNmjWcPXsWx3F47733
      CAaDADz66KMMDQ3R1dVFc3MzxphMKO7MBhQAEZEPyooATE9PMz09TWdnJwCNjY20tLTw4osv
      EggEqKurIxAIUFZWxksvvUQkEuHAgQP09fXh8XjYuXMnL730EqFQiMrKypUdjIjIKmEcx3FW
      eif+P6lUilQqtWh5JxaL4ff7P9Sn+jszAMuy7uVuioisOsYYk9UB+KgUABGRpRljjBbHRURc
      SgEQEXEpBUBExKUUABERl1IARERcSgEQEXEpBUBExKUUABERl1IARERcSgEQEXEpBUBExKUU
      ABERl1IARERcSgEQEXEpBUBExKUUABERl1IARERcSgEQEXEpBUBExKUUABERl1IARERcKmsC
      4DgO4+PjJBIJAJLJJIODgwwODjIyMgLAwsIC3d3dTExMADA7O5v5/+npaeLx+MrsvIjIKpQV
      AbBtm46ODv785z8TDocBGB0d5e2332Zubo5YLIbjOLz88svk5ORw+vRpJiYm6O3tZXJykvn5
      eTo6OjDGrPBIRERWj5yV3gEAYwytra0UFxdnHguFQjQ0NLBhwwYsyyIajZKXl8emTZsoLy/n
      7bffJhAI4DgOx48f5/HHH8fn831g2+l0Gsdx7udwRERWhawJQEFBwaLHSktLGRgY4NKlS5SX
      l/Pwww9TWFiIMYZAIEA8HicQCNDR0UFFRQVr164Fbs8mksnkom3Ztn3fxiIislpkRQCWsmHD
      Burq6nAch7a2NizLIhKJ4DgO8/Pz+P1+AJ588kneeusthoeHqa6uxuPxZP7mOA62bWNZ1koO
      RUQkK2VFAJLJJAMDA4yNjZGTk4Nt21y/fh2v15v5vaSkhIWFBXp6eujr66O1tZVr165hjOHz
      n/88f/zjHzl48OAHZhIiIrI042TBAnkqlWJoaCjzezAYpLi4mBs3bpBMJvnUpz6F3+8nHo8z
      MDDA2rVrqaioIBKJ4PP58Pv9zM7O4vF4FgVAMwARkaUZY0xWBOBeUQBERJZmjDFZcRqoiIjc
      fwqAiIhLKQAiIi6lAIiIuJQCICLiUgqAiIhLKQAiIi6lAIiIuJQCICLiUgqAiIhL/R+VZ869
      g4KhQwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Wages_JV' width='384'>
      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
      G2+8QVlZGTdv3mTBggWdtitJEo2NjTz99NOYTCbWrVvnMQI3mUz87W9/Y8mSJZw7d47JkydT
      UVHB//zP/7BmzZpOcwKdPXvW7f9vaGjgo48+4sUXX/SQ0Wq1HgZq/PjxD94xjwBX/Q2c177u
      XEDthW7W1senUC9Q3RoCOghnAD1aBLbZbNy4cYNJkyaRkZGB2Wzm22+/JSsry0Pu1q1b1NXV
      MWbMGA4fPkxWVhZeXl4EBwdz+vRp6uvruXTpErNmzUKv13P+/HlCQkLw8fHh/PnzPbrBwY4s
      y+zcuZM1a9bw8ssvs2TJEnbu3NltbHtvolar2b59OyaTif/4j//g+++/bxfhc+3aNV566SWW
      LFnCp59+iiRJ3S7WpqSk8Oyzz/LZZ59RUlKCn58fKtXdvPE+Pj48+eST3Llzh7CwMNatW0dA
      QABLly7tMiFcQUEB0LI7+c033yQoKIjKysoe9MDjQzbcxp65s/O/7I97W8VHTnVrIZhBtgcA
      ejgD0Ol0JCcnU1dXhyzL6HQ61q1bx4EDBzzkmpubCQ4OJjg4GJfLRXNzMyNGjCA4OJirV6+S
      n5+Pl5cX6enp7rziAQEB+Pn58d133wEtSalkWXbnJ2/7w1XoHlmW3f0miiI2m63PzqxaP+PZ
      s2eTnJzMxYsXqaysJCQkxC0TFxdHdnY2iYmJFBYW8umnnzJ16tR2pRjbIssy3t7evPzyy5w+
      fZrm5mbUas+fwOTJk4mJicHHxwer1crixYvx8/Prst3WovD19fU4HA7q6uoAurymryB3YzRB
      dt+H5Oxa1uVyPfJ7lh32bmVsNhs4ZWR797JWq5WqupbY/yCxqVvZB+HeOgqtmM1mTpw4gSzL
      zJo1i5CQEBoaGti/fz/PPvss+fn5FBcXo1arWbJkift3mp2dzZ07d/D19WX+/PlkZWVRWVmJ
      v78/c+fOpbq6moyMDFQqFUuWLOHSpUtMnTqVnJwcoqKiOgx66LELKD8/n/z8fFatWtXpQzkh
      IYFTp05RXl5OfX09ixYt4uzZs4iiiNVqxel0uvO+HDt2jCVLlnDmzBnUarV7VNfaCYIgoNVq
      72vxrDXW+8CBA1y/fp1JkyaxcOHCnt5yv+OZZ57h888/RxAEvL29efLJJ/t05Mn69evx9m4p
      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
      SFD/AdaL1MPj1ZvPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='db_General' width='384'>
      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
      15nHTTdRWlrK6tWr8ff3v2Yn+z/y448/snbtWhYsWMCbb75Jv379aNeuHWlpaQQEBHDgwAFm
      zpxJZKRrYWO325k+fTqPPvooI0eOrNVfWloaWVlZtGrViu3btzN16lSioqIwmUzk5OTw3HPP
      MXfuXF588UV3my+++EI5vG9C6hu/v6FR7utfNIpb44VISEhgypQp9aorCEKtULm33nqr++f4
      +Hh3ON/rgYqKCk6ePOmOoaTX62nRogW9evUiLy8PSZLw9fX1mJy/+OILHnjggTr7czqd/O9/
      /2PSpElUVVWRk5PD0qVLKSwsZOLEibRv3x6NRuOhXFetWsWYMWPYsWNH476sQrPT6IfAqmvM
      D9zP6+oOGqXTNq7O12q1HDlyhLlz5zJ37tzr5uC2vLzc/XNNTQ02mw2Hw0FZWRllZWVum7HT
      6XQ/q6qqHe9m9uzZtGnThmPHjpGbm8sbb7xBcHAwc+bMwWg0Eh4eTmBgIDU1LrPgsWPHOHLk
      CNnZ2aSm1s4HffjwYTQaDcuXL2ft2rWEhYUxffp07rvvPrKzsyksLARcu4jTZGRksH//fnbt
      2kVaWt23x0tKSvjggw8Al8375ZdfRpZl1q9fz4cffsiPP/7oritJEvPmzeO9995rdtu4gieN
      vgPQqjSIYsNOAkZDDbs3biGqZSzd+/dDlmWSt2xnwKjhHvUKTmSj1mqJad1wp+ZRIYEIwiWd
      H9dJbItg+ndtxf6j+RSUVjFmYGcy8krILz5zWNujXQxtY8PYmHwMk+XyYiqFB/tfrsjnJSAg
      gNdee839OSkpicGDBzfqmM3N2Sabs80xVquV48ePExkZye23346Pjw8mk4lNmzYhSRI7d+5k
      /vz5Hn09++yz2O129uxxeb3t27fPvUovLCykf//+aLVaqqqq0Ov1tG7dmpkzZ3L06FH3ecnZ
      9OrVi169epGZmYnRaCQyMpI5c+YgCAIzZ85k0aJFzJ49mwkTJiCKIkuXLuW5554DXOc553K9
      PdtEdHbqwz179vDKK68we/ZsJk+eDMDWrVvp06cP0dHRLF++nHvuuadhvniFy6bRFYC3WoO1
      gRXAoeT99Bk6mLX/XUF8p46k7tpD8pZtHgrAbrOxdsmPtOrQtkEVgLdGQ2RoIMUVDRPfqHu7
      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
      jIwMAPz8/MjPz8dut2O1WmloaGDq1KncddddnDlzpt/bGBkZybXXXktAQIDru760je4iE8HE
      kFVYWMiYMWM63SYzM5O8vDxUKhWTJk1CrVaTnJzMxIkTCQgI4MSJE1itVkaPHk1kZCS1tbWE
      hYW53t/Q0EBCQgJFRUUsXLgQDw8Pzp07h91uJzY2ttdniO5un06n4+zZs2i1WhYuXOiWq5XO
      2qjValt9HjU1NZSVlTFu3Diio6OB5u/pzJkz5Obmcscdd5CTk0NRURFarZaZM2diMpl61b7K
      ykqOHz+OVqtl9OjRREVF8dVXXxEUFER8fDwJCQnU19fj6elJfHw8iYmJaDQaFi1ahE6nw+l0
      cvjwYaqqqjAYDMyfP5+kpCQURWHmzJluuZLqThtjYmJISUkhODiYGTNmALRp44IFC1r9bfS0
      P0oCgBiyuhIA3EVRFCoqKggMDOyX+rprsLcPmm8HWa3WXh/w+1JZWRlBQUED3YxOubONEgDE
      kNWfAUCI4Uj6AIQQYoSSACCEECOUBAAhhBihJAAIIcQIJQFACCH6gdlsduVLcOe2namuru50
      LoMEACHEiHTixAnuu+8+Nm3aRG5ubpff9/HHH3e7roSEBP74xz9SWVkJwIMPPsjvfvc7nnnm
      GS4diHnptvfccw+/+93v+Pe//92m3Ly8PI4dO9Zhva+++iphYWFYLBbuvPNOTp061ep1WQxO
      CDEivf322zz++ONUV1fzyiuvsGTJEsaPH092djYxMTF8/vnnFBcXc/3112O1WsnLyyM3N5fE
      xETOnTvHunXreOWVV9BqtWzcuJG33nqLwsJCfvGLX2AymXjuuecoLy/nzjvv5M0332TUqFHY
      7XagOUPXY489xqOPPkp5eTnvvvsu1dXV/PCHP2yzrY+PD4888ghPPPEEmZmZHDt2jKysLObN
      m0daWhqpqalYLBbKy8tJTU1l6dKlLFq0iLq6OpxOJ35+fuzfv59rrrmGvXv3EhISQmJiIqtW
      rZIrACHEyKTRaDAYDISEhGA2mykqKqKuro7CwkLq6+uJi4sjKCiIXbt2UVJSQklJCZs2bWLq
      1Kls2rSJHTt2EBgYiNVq5eTJk+zevZu77roLX19fMjMz8fb25sEHH+Sdd95h+fLlrF27ltDQ
      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
      wWCw5n33f9Xk4pJOD17/AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
